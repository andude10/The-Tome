@model TheTome.WebApp.ViewModels.CatalogViewModel

@{
    ViewData["Title"] = "Explore";
    var hasPreviousPage = Model.PageViewModel.HasPreviousPage ? "" : "disabled";
    var hasNextPage = Model.PageViewModel.HasNextPage ? "" : "disabled";
}

<div class="row m-2">
    <div class="filter-panel col-sm-3 mt-3 p-2">
    </div>
    <div class="col-sm-9">
        <div class="dropdown m-2 text-end">
            @{
                var sortTypeName = Model.SortBookState switch
                {
                    SortBookState.Popular => "Popular first",
                    SortBookState.HighRating => "First with a high rating",
                    SortBookState.PriceAsc => "Cheaper first",
                    SortBookState.PriceDesc => "More expensive first",
                    _ => throw new ArgumentOutOfRangeException()};
            }

            <a class="btn dropdown-toggle" data-bs-toggle="dropdown" role="button">
                @sortTypeName
            </a>

            <div class="dropdown-menu">
                <a class="dropdown-item sort-button" asp-action="Catalog" asp-route-pageId="@(Model.PageViewModel.PageNumber)" asp-route-sortBookState="@SortBookState.Popular">Popular first</a>
                <a class="dropdown-item sort-button" asp-action="Catalog" asp-route-pageId="@(Model.PageViewModel.PageNumber)" asp-route-sortBookState="@SortBookState.PriceAsc">Cheaper first</a>
                <a class="dropdown-item sort-button" asp-action="Catalog" asp-route-pageId="@(Model.PageViewModel.PageNumber)" asp-route-sortBookState="@SortBookState.PriceDesc">More expensive first</a>
                <a class="dropdown-item sort-button" asp-action="Catalog" asp-route-pageId="@(Model.PageViewModel.PageNumber)" asp-route-sortBookState="@SortBookState.HighRating">First with a high rating</a>
            </div>
        </div>
        @await Html.PartialAsync("_BooksList", Model.BooksViewModel)
    </div>
</div>

<ul class="pagination justify-content-center m-3">
    <li class="page-item @hasPreviousPage">
        <a asp-action="Catalog" asp-route-pageId="@(Model.PageViewModel.PageNumber - 1)" asp-route-sortBookState="@Model.SortBookState" class="page-link">Previous</a>
    </li>
    <li class="page-item @hasNextPage">
        <a asp-action="Catalog" asp-route-pageId="@(Model.PageViewModel.PageNumber + 1)" asp-route-sortBookState="@Model.SortBookState" class="page-link">Next</a>
    </li>
</ul>